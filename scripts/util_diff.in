# util_diff
# port(1) helper script to generate a diff or a shar file
#
# $Id: util_diff.in,v 1.4 2009/09/09 19:58:30 skolobov Exp $
#

# Check if this script is run via port(1)
if [ "${PORTTOOLS}" = "" ]
then
	echo "This script should be run via port(1) front-end"
	exit 1
fi

# Determine if this is a new port
if [ "${MODE}" = "" ]
then
	svn status Makefile 2>&1 1>/dev/null | grep -qs 'svn: warning: W155007:'
	[ $? -eq 0 ] || [ "`grep '\$FreeBSD: ' Makefile`" ] || MODE="new"
fi

# Create a temporary dir for generated files (patch/shar, PR form)
TEMPROOT="`mktemp -d -t port`" || exit 1

if [ "${MODE}" = "new" ]
then
	# Generate shar file with new port
	echo "===> Creating shar file"
	PATCH="${TEMPROOT}/${PKGNAME}.shar"
	SAVE_CWD="`pwd`"
	DIR="`basename ${SAVE_CWD}`"
	cd ..
	shar `find ${DIR}` > ${PATCH}
	if [ $? -ne 0 ]
	then
		echo "Error generating patch"
		rm -rf ${TEMPROOT}
		exit 1
	fi
	cd ${SAVE_CWD}
else
	# Determine the default diff mode
	if [ "${DIFF_MODE}" = "" ]
	then
		if [ -d "${PORTSDIR}/.svn/" ]
		then
			DIFF_MODE="SVN"
		else
			DIFF_MODE="${PORTSDIR}"
		fi
		echo "Default diff mode is ${DIFF_MODE}"
	elif [ "${DIFF_MODE}" = "SVN" ]
	then
		# If there is no .svn directory then
		# fallback to diffing against ${PORTSDIR} tree
		if [ ! -d "${PORTSDIR}/.svn/" ]
		then
			echo "Diff mode was set to ${DIFF_MODE}, but there's no .svn directory"
			echo -n "Trying ${PORTSDIR} ... "
			if [ -d ${PORTSDIR} ]
			then
				DIFF_MODE="${PORTSDIR}"
				echo "found"
			else
				echo "not found - please choose an approriate diff mode"
				rm -rf ${TEMPROOT}
				exit 1
			fi
		fi
	fi

    #set variables regardless of mode
	PYTHON_SUFFIX="`make -V PYTHON_SUFFIX`"
	RUBY_SUFFIX="`make -V RUBY_SUFFIX`"
	PKGNAMEPREFIX="`make -V PKGNAMEPREFIX | sed -E "s,py${PYTHON_SUFFIX}-,py-," | sed -E "s,ruby${RUBY_SUFFIX}-,ruby-,"`"
	PKGNAMESUFFIX="`make -V PKGNAMESUFFIX`"
	PORTNAME="${PKGNAMEPREFIX}`make -V PORTNAME`${PKGNAMESUFFIX}"

	if [ "${DIFF_MODE}" = "SVN" ]
	then
		DIFF_TYPE=${DIFF_MODE}

		# Run 'svn update' first
		echo "===> Updating from SVN"
		svn update
		status=$?
		if [ $status -ne 0 ]
		then
			echo "Error updating SVN"
			rm -rf ${TEMPROOT}
			exit 1
		fi
		DIFF_CMD="svn diff"
	else 
		# Non-SVN modes
		DIRBASENAME=`basename \`pwd\``
		PORTBASENAME_HEADER=`sed -n -E -e '1,/^($|[^#].*$)|\\$FreeBSD\:/s%^#.*\\$FreeBSD\:[[:space:]]*([^/]+/)*([^/]+)/Makefile.*\\$%\2%p' Makefile`
		if [ "${DIRBASENAME}" != "${PORTBASENAME_HEADER}" ]
		then
			echo "Warning: current directory name differs from Makefile header:"
			echo "	${DIRBASENAME}" != "${PORTBASENAME_HEADER}"
		fi
		if [ -d ${DIFF_MODE} ]
		then
			# -d <dir> have been specified
			# it should be Ports tree location
			DIFF_TYPE="ports"
			CATEGORY="`make -V CATEGORIES | sed -E 's/^([^ ]+).*$/\1/'`"
			ORIG_DIR="${DIFF_MODE}/${CATEGORY}/${PORTNAME}"
			if [ ! -d ${ORIG_DIR} ]
			then
				echo "Original version does not exist at ${ORIG_DIR}"
				if [ -d "${DIFF_MODE}/${CATEGORY}/${DIRBASENAME}" ]
				then
					PORTBASENAME=${DIRBASENAME}
					ORIG_DIR="${DIFF_MODE}/${CATEGORY}/${PORTBASENAME}"
				elif [ -d "${DIFF_MODE}/${CATEGORY}/${PORTBASENAME_HEADER}" ]
				then
					PORTBASENAME=${PORTBASENAME_HEADER}
					ORIG_DIR="${DIFF_MODE}/${CATEGORY}/${PORTBASENAME}"
				fi
				[ -d ${ORIG_DIR} ] && echo "Using ${ORIG_DIR} instead"
			fi
		else 
			# -d <pattern> have been specified
			# <pattern> is used to determine original port location
			DIFF_TYPE="suffix"
			ORIG_DIR="../${DIRBASENAME}${DIFF_MODE}"
			if [ "${DIRBASENAME}" != "${PORTNAME}" -a "${DIRBASENAME}" = "${PORTBASENAME_HEADER}" ]
			then
				PORTBASENAME=${DIRBASENAME}
				echo "Using ${PORTBASENAME} instead of ${PORTNAME} as the port's directory name"
			fi
		fi

		# Check to see if the original version of port exist 
		if [ ! -d ${ORIG_DIR} ]
		then
			echo "Original version does not exist at ${ORIG_DIR}"
			rm -rf ${TEMPROOT}
			exit 1
		fi
		
		DIFF_CMD="diff -ruN ${ORIG_DIR} ."
	fi

	# Generate patch
	echo "===> Generating patch"
	PORTVERSION="`make -V PORTVERSION`"
	PATCH="${TEMPROOT}/${PORTNAME}-${PORTVERSION}.patch"
	${DIFF_CMD} > ${PATCH}
	#if [ $? -ne 0 ]
	#then
	#	echo "Error generating patch"
	#	exit 1
	#fi

fi
